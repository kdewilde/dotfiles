# Path to your dotfiles
export DOT=$HOME/dotfiles

# all of our zsh files
typeset -U config_files
export config_files=($DOT/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down


# Enable fuzzy finding
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# # User configuration
# 
# # ssh
# # export SSH_KEY_PATH="~/.ssh/rsa_id"
# 
# # Set personal aliases, overriding those provided by oh-my-zsh libs,
# # plugins, and themes. Aliases can be placed here, though oh-my-zsh
# # users are encouraged to define aliases within the ZSH_CUSTOM folder.
# # For a full list of active aliases, run `alias`.
# 
# source $HOME/.bash_aliases
# 
# export M2_HOME="/opt/maven"
# export PATH=$M2_HOME/bin:$PATH
# 
# export CHROME_BIN="/usr/bin/chromium"
# 
# DEFAULT_USER=`whoami`
# 
# #!/bin/sh
# #
# # Usage: extract <file>
# # Description: extracts archived files / mounts disk images
# # Note: .dmg/hdiutil is macOS-specific.
# #
# # credit: http://nparikh.org/notes/zshrc.txt
# extract () {
#     if [ -f $1 ]; then
#         case $1 in
#             *.tar.bz2)  tar -jxvf $1                        ;;
#             *.tar.gz)   tar -zxvf $1                        ;;
#             *.bz2)      bunzip2 $1                          ;;
#             *.dmg)      hdiutil mount $1                    ;;
#             *.gz)       gunzip $1                           ;;
#             *.tar)      tar -xvf $1                         ;;
#             *.tbz2)     tar -jxvf $1                        ;;
#             *.tgz)      tar -zxvf $1                        ;;
#             *.zip)      unzip $1                            ;;
#             *.ZIP)      unzip $1                            ;;
#             *.pax)      cat $1 | pax -r                     ;;
#             *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
#             *.rar)      unrar x $1                          ;;
#             *.Z)        uncompress $1                       ;;
#             *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
#         esac
#     else
#         echo "'$1' is not a valid file"
#     fi
# }

